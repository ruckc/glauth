apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "glauth.fullname" . }}
  labels:
    {{- include "glauth.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "glauth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "glauth.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "glauth.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: ldaps
              containerPort: 10636
              protocol: TCP
            - name: ldap
              containerPort: 10389
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: https
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: https
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: ldaps
              mountPath: "/app/ldaps"
              readOnly: true
            - name: api
              mountPath: "/app/api"
              readOnly: true
            - name: config
              mountPath: "/app/config"
              readOnly: false
          env:
            - name: PGHOST
              value: {{ .Values.database.host }}
            - name: PGPORT
              value: {{ .Values.database.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.database.name }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentials.secret.name }}
                  key: {{ .Values.database.credentials.secret.keys.username }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentials.secret.name }}
                  key: {{ .Values.database.credentials.secret.keys.password }}
      volumes:
        - name: ldaps
          secret:
            secretName: {{ template "glauth.namePrefix" . }}-ldaps-tls
        - name: api
          secret:
            secretName: {{ template "glauth.namePrefix" . }}-api-tls
        - name: config
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
